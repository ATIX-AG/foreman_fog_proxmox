<%# Copyright 2018 Tristan Robert

This file is part of ForemanProxmox.

ForemanProxmox is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ForemanProxmox is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ForemanProxmox. If not, see <http://www.gnu.org/licenses/>. %>

<%= field_set_tag _("Options"), :id => "options" do %>
  <%= textarea_f f, :description, :label => _('Description'), :label_size => "col-md-2" %>
  <%= text_f f, :boot, :label => _('Start/Shutdown order'), :label_size => "col-md-2" %>
  <%= checkbox_f f, :onboot, :label => _('Start at boot') %>
  <%= checkbox_f f, :agent, :label => _('Qemu Agent') %>
  <%= checkbox_f f, :kvm, :label => _('KVM'), :label_help => _('Enable/disable KVM hardware virtualization') %>
<% end %>
<%= field_set_tag _("CPU"), :id => "cpu" do %>
  <%= select_f f, :cpu_type, proxmox_cpus_map, :id, :name, { }, :label => _('Type'), :label_size => "col-md-2" %>
  <%= counter_f f, :sockets, :class => "input-mini", :label => _('Sockets'), :label_size => "col-md-2" %>
  <%= counter_f f, :cores, :class => "input-mini", :label => _('Cores'), :label_size => "col-md-2" %>
  <%= counter_f f, :vcpus, :class => "input-mini", :label => _('VCPUs'), :label_size => "col-md-2" %>
  <%= counter_f f, :cpulimit, :class => "input-mini", :label => _('CPU limit'), :label_size => "col-md-2" %>
  <%= counter_f f, :cpuunits, :class => "input-mini", :label => _('CPU units'), :label_size => "col-md-2" %>
  <%= checkbox_f f, :numa, :label => _('Enable NUMA') %>
  <%= checkbox_f f, :pcid, :label => _('PCID') %>
  <%= checkbox_f f, :spectre, :label => _('Spectre-CTRL') %>
<% end %>
<%= field_set_tag _("Memory"), :id => "memory" do %>
  <%= byte_size_f f, :memory, :class => "input-mini", :label => _('Memory (MiB)'), :label_size => "col-md-2" %>
  <%= byte_size_f f, :min_memory, :class => "input-mini", :label => _('Minimum memory (MiB)'), :label_size => "col-md-2" %>
  <%= counter_f f, :shares, :class => "input-mini", :label => _('Shares'), :label_size => "col-md-2" %>
  <%= checkbox_f f, :balloon, :label => _('Ballooning Device') %>
<% end %>
<%= field_set_tag _("CD-ROM"), :id => "cdrom" do %>
  <%= radio_button_f f, :cdrom, :value => 'none', :text => _('None'), :onclick => 'cdromSelected(this)' %>
  <%= radio_button_f f, :cdrom, :value => 'cdrom' , :text => _('Physical'), :onclick => 'cdromSelected(this)' %>
  <%= radio_button_f f, :cdrom, :value => 'image' , :text => _('Image'), :onclick => 'cdromSelected(this)' %>
  <div id='cdrom_image_form' class='<%= 'hide' if %[none cdrom].include? f.object.cdrom %>'>
    <%= select_f f, :cdrom_storage, compute_resource.storages_isos, :storage, :storage, { :include_blank => true }, :label => _('Storage'), :label_size => "col-md-2", :onchange => 'storageIsoSelected(this)' %>
    <%= select_f f, :cdrom_iso, compute_resource.isos(f.object.cdrom_storage), :volid, :volid, { :include_blank => true }, :label => _('Image ISO'), :label_size => "col-md-2" %>
  </div>
<% end %>